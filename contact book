import tkinter as tk
from tkinter import messagebox

class ContactBookGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Contact Book")

        self.contacts = {}
        self.create_gui()

    def create_gui(self):
        self.name_label = tk.Label(self.root, text="Name:")
        self.name_label.pack()

        self.name_entry = tk.Entry(self.root)
        self.name_entry.pack()

        self.phone_label = tk.Label(self.root, text="Phone Number:")
        self.phone_label.pack()

        self.phone_entry = tk.Entry(self.root)
        self.phone_entry.pack()

        self.add_button = tk.Button(self.root, text="Add Contact", command=self.add_contact)
        self.add_button.pack()

        self.view_button = tk.Button(self.root, text="View Contacts", command=self.view_contacts)
        self.view_button.pack()

        self.search_button = tk.Button(self.root, text="Search Contact", command=self.search_contact)
        self.search_button.pack()

        self.update_button = tk.Button(self.root, text="Update Contact", command=self.update_contact)
        self.update_button.pack()

        self.delete_button = tk.Button(self.root, text="Delete Contact", command=self.delete_contact)
        self.delete_button.pack()

        self.quit_button = tk.Button(self.root, text="Quit", command=self.root.quit)
        self.quit_button.pack()

    def add_contact(self):
        name = self.name_entry.get()
        phone_number = self.phone_entry.get()
        if name and phone_number:
            self.contacts[name] = phone_number
            messagebox.showinfo("Success", f"Contact '{name}' added successfully!")
            self.name_entry.delete(0, tk.END)
            self.phone_entry.delete(0, tk.END)
        else:
            messagebox.showerror("Error", "Name and Phone Number are required fields.")

    def view_contacts(self):
        if not self.contacts:
            messagebox.showinfo("Info", "No contacts found.")
        else:
            contact_list = "\n".join([f"{name}: {phone}" for name, phone in self.contacts.items()])
            messagebox.showinfo("Contact List", contact_list)

    def search_contact(self):
        name = self.name_entry.get()
        if name in self.contacts:
            messagebox.showinfo("Contact Info", f"Name: {name}\nPhone: {self.contacts[name]}")
        else:
            messagebox.showinfo("Info", f"Contact '{name}' not found.")

    def update_contact(self):
        name = self.name_entry.get()
        phone_number = self.phone_entry.get()
        if name in self.contacts:
            self.contacts[name] = phone_number
            messagebox.showinfo("Success", f"Contact '{name}' updated successfully!")
            self.name_entry.delete(0, tk.END)
            self.phone_entry.delete(0, tk.END)
        else:
            messagebox.showinfo("Info", f"Contact '{name}' not found.")

    def delete_contact(self):
        name = self.name_entry.get()
        if name in self.contacts:
            del self.contacts[name]
            messagebox.showinfo("Success", f"Contact '{name}' deleted successfully!")
            self.name_entry.delete(0, tk.END)
            self.phone_entry.delete(0, tk.END)
        else:
            messagebox.showinfo("Info", f"Contact '{name}' not found.")

if __name__ == "__main__":
    root = tk.Tk()
    app = ContactBookGUI(root)
    root.mainloop()
